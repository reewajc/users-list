{"version":3,"sources":["Users.js","App.js","reportWebVitals.js","index.js"],"names":["Users","useState","users","setUsers","loading","setLoading","fetchUsers","a","fetch","res","json","data","console","log","useEffect","className","map","user","CardGroup","Card","Body","Img","src","avatar","alt","Title","name","Text","phone","email","website","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAKe,SAASA,IACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAU,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,8CADT,cACTC,EADS,gBAEIA,EAAIC,OAFR,OAETC,EAFS,OAGfC,QAAQC,IAAIF,GACZR,EAASQ,GACTN,GAAW,GALI,2CAAH,qDAYhB,OAJAS,qBAAU,WACNR,MACD,IAGC,sBAAKS,UAAU,kBAAf,UACM,qBAAKA,UAAU,2BAAf,uCACE,qBAAKA,UAAU,MAAf,SAEJX,EAAU,4CAEXF,EAAMc,KAAI,SAAAC,GAAI,OAEb,cAACC,EAAA,EAAD,CAAWH,UAAU,eAArB,SACI,cAACI,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,CAAWL,UAAU,qBAArB,UACI,cAACI,EAAA,EAAKE,IAAN,CAAUC,IAAKL,EAAKM,OAAQC,IAAI,SAChC,cAACL,EAAA,EAAKM,MAAN,CAAYV,UAAU,eAAtB,SAAsCE,EAAKS,OAC3C,eAACP,EAAA,EAAKQ,KAAN,WACG,yCAAYV,EAAKW,MAAjB,OACA,yCAAYX,EAAKY,MAAjB,OACA,2CAAcZ,EAAKa,QAAnB,gBAR0Bb,EAAKc,Y,MCnB3CC,MARf,WACE,OAEA,cAAChC,EAAD,KCMaiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.324677f3.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'    \nimport { Card, CardGroup } from 'react-bootstrap'\n\n\nexport default function Users() {\n    const [users, setUsers] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const fetchUsers = async () => {\n        const res = await fetch('https://jsonplaceholder.typicode.com/users')\n        const data = await res.json()\n        console.log(data)\n        setUsers(data)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchUsers()\n    }, [])\n\n    return (\n        <div className=\"container-fluid\">\n              <div className=\"text-center text-primary\">User List App using React</div>\n                <div className=\"row\"> \n                    \n           {loading ? <h1>Loading...</h1> : \n      \n           users.map(user => ( \n           \n            <CardGroup className=\"col-lg-3 m-1\" key={user.id}>\n                <Card>\n                    <Card.Body className=\"text-light bg-dark\">\n                        <Card.Img src={user.avatar} alt=\"user\" />\n                        <Card.Title className=\"text-success\">{user.name}</Card.Title>\n                        <Card.Text>\n                           <p> phone: {user.phone} </p>\n                           <p> email: {user.email} </p>\n                           <p> website: {user.website} </p>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardGroup>\n     \n              ))}\n                     </div>\n        </div>\n    )\n           \n}\n","import Users from \"./Users\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n   \n  <Users/>\n  \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}